@using StorageApp.Dtos.Items
@model ItemsIndexDto

@{
    ViewData["Title"] = "All Items";
}

<div>
    <label for="search" class="h3">Search</label>
    <div class="d-flex align-items-center gap-2">
        <input id="searchInput" class="p-0 m-0" type="text" name="search" placeholder="Search..." value="@Model.SearchTerm" />
        <input id="minPriceInput" placeholder="Min Price" value="@Model.MinPrice"/>
        <input id="maxPriceInput" placeholder="Max Price" value="@Model.MaxPrice"/>
        <a id="searchBtn" href="#" onclick="return searchBtnClick();" class="btn btn-info btn">Search</a>
    </div>
</div>

<a asp-action="Add" class="btn btn-success mt-1 mb-1">Add Item</a>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Quantity</th>

            <th>Price</th>
            <th>Supplier</th>
            <th>Options</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.AllItems)
        {
        <tr>
            <td>@item.Id</td>
            <td>@item.Name</td>
            <td>@item.Quantity</td>
            <td>@item.Price</td>
            <td>@item.Supplier</td>
            <td>
                <form method="post" asp-action="Delete" asp-route-id="@item.Id">
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </td>
        </tr>        }
    </tbody>
</table>

@section Scripts{
    <script defer>
        // When the search button is clicked (in this case it's just an <a> element), override the .href, so that the link has the proper filter arguments
        function searchBtnClick() {
            let searchBtn = document.querySelector("#searchBtn");

            let searchQuery = getSearchQuery();
            if (searchQuery == "") 
            { 
                return false;
            }

            searchBtn.href = "/?" + getSearchQuery();

            return true;
        }

        // Check if a string is null or whitespace
        function isNullOrWhitespace(input) {
            if (typeof input === 'undefined' || input == null) return true;

            return input.replace(/\s/g, '').length < 1;
        }

        // Get the search query by combining the values of different html dom elements
        function getSearchQuery()
        {
            let searchBtn = document.querySelector("#searchBtn");

            let searchInput = document.querySelector("#searchInput");
            let minPriceInput = document.querySelector("#minPriceInput");
            let maxPriceInput = document.querySelector("#maxPriceInput");

            let searchTerm = searchInput.value;
            searchTerm = searchTerm.trim();

            let minPrice = minPriceInput.value;
            let maxPrice = maxPriceInput.value;

            let searchQuery = "";
            
            if(!(isNullOrWhitespace(searchTerm)))
            {
                searchQuery+="&searchTerm="+searchTerm;
            }

            if (!(isNullOrWhitespace(minPrice))) {
                searchQuery += "&minPrice=" + minPrice;
            }

            if (!(isNullOrWhitespace(maxPrice))) {
                searchQuery += "&maxPrice=" + maxPrice;
            }

            return searchQuery;
        }
    </script>
    <script defer>
        window.onload=function(){
            $("#searchInput").on('keyup', function (e) {
            if (e.key === 'Enter' || e.keyCode === 13) {
                document.querySelector("#searchBtn").click();
            }
        });
        }
    </script>


}


